{"title":"angularプロジェクトをgithub pagesにdeployする","date":"2022-09-24","category":"Angular","tag":["angular","deploy","github pages","angular-cli-ghpages"],"body":"\r\n\r\n\r\nAngular CLIの[deployコマンド](https:\/\/angular.io\/guide\/deployment)を使用すると、Angularアプリケーションをワンコマンドで様々なプラットフォームに配信できます。\r\n\r\nGithub pages用のmodule: [angular-cli-ghpages](https:\/\/github.com\/angular-schule\/angular-cli-ghpages)を利用してdeployする設定についてまとめます。\r\n\r\nangular v8以降は`ng deploy`コマンドの統一化により、設定が簡単になっています。それ以前の設定方法については[angular v7以前の設定方法について](doc\/angular\/angular-setup-ghpages#angular-v7以前の設定方法について)<!--rehype:class=internal-link-->を参照してください。\r\n\r\n## angular v8以降の設定方法について\r\n\r\n[公式readme](https:\/\/github.com\/angular-schule\/angular-cli-ghpages#-quick-start-local-development-)に記載の手順で基本的にはうまくいきます。\r\n\r\nまずは`angular-cli-ghpages`をdependencyに追加します。\r\n\r\n``` powershell\r\n> yarn add angular-cli-ghpages\r\n```\r\n\r\n次に`package.json`にdeployコマンドを登録します。\r\n\r\n``` diff\r\n{\r\n  \"name\": \"net6-markdown-web-engine\",\r\n  \"version\": \"0.0.0\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"start\": \"ng serve --ssl --ssl-cert %APPDATA%\\\\ASP.NET\\\\https\\\\%npm_package_name%.pem --ssl-key %APPDATA%\\\\ASP.NET\\\\https\\\\%npm_package_name%.key\",\r\n    \"build\": \"ng build\",\r\n    \"watch\": \"ng build --watch --configuration development\",\r\n    \"test\": \"ng test\",\r\n    \"prestart\": \"node aspnetcore-https\",\r\n    \"lint\": \"ng lint\",\r\n+    \"deploy\": \"ng deploy\"\r\n  },\r\n  ...\r\n}\r\n```\r\n\r\n2022-09-24時点の説明では、以下のように`--base-href`オプションでbaseHrefを指定するように記載されていました。\r\n\r\n``` powershell\r\n> ng deploy --base-href=\/<repositoryname>\/\r\n```\r\n\r\nですが、Angular v13で`ng serve`の`--base-href`がdeprecatedされた影響で`Unknown option: '--base-href'`エラーが発生するようになってしまいました。\r\n\r\n改めて[公式readmeのConfiguration File](https:\/\/github.com\/angular-schule\/angular-cli-ghpages#-configuration-file-)の項を読むと、angular.jsonでoptionはすべて指定できることがわかります。\r\n\r\nこれを参考に、angular.jsonの`projects` > `architect` > `deploy`にbuilderとoptionの指定を追加します。\r\n\r\n``` json\r\n{\r\n  \"$schema\": \".\/node_modules\/@angular\/cli\/lib\/config\/schema.json\",\r\n  \"version\": 1,\r\n  \"newProjectRoot\": \"projects\",\r\n  \"projects\": {\r\n      \"architect\": {\r\n        \"build\": {\r\n          ...\r\n        },\r\n        \"deploy\": {\r\n          \"builder\": \"angular-cli-ghpages:deploy\",\r\n          \"options\": {\r\n            \"baseHref\": \"https:\/\/takumura.github.io\/tech-log\/\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n```\r\n\r\nこれで準備は完了です。あとは`deploy`コマンドを実行するだけです。\r\n\r\n``` powershell\r\n> yarn run deploy\r\nyarn run v1.22.18\r\n$ ng deploy\r\n📦 Building \"net6-markdown-web-engine\"\r\n📦 Build target \"net6-markdown-web-engine:build:production\"\r\n✔ Browser application bundle generation complete.\r\n✔ Copying assets complete.\r\n✔ Index html generation complete.\r\n\r\nInitial Chunk Files           | Names         | Raw Size | Estimated Transfer Size\r\nmain.916c949610f5da02.js      | main          |  1.95 MB |               466.40 kB\r\nstyles.115de464a61128e0.css   | styles        | 86.36 kB |                 8.86 kB\r\npolyfills.3b0926dacd75e569.js | polyfills     | 36.19 kB |                11.51 kB\r\nruntime.969567bc7b9abfdf.js   | runtime       |  1.24 kB |               662 bytes\r\n\r\n                              | Initial Total |  2.07 MB |               487.41 kB\r\n\r\nBuild at: 2022-09-23T15:20:55.591Z - Hash: e6426ae3739f9185 - Time: 26054ms\r\n\r\nWarning: bundle initial exceeded maximum budget. Budget 500.00 kB was not met by 1.58 MB with a total of 2.07 MB.\r\n\r\n\r\n🚀 Uploading via git, please wait...\r\n🌟 Successfully published via angular-cli-ghpages! Have a nice day!\r\nDone in 38.89s.\r\n```\r\n\r\nPCを新調したので、以前は3分ほど掛かっていた処理が40秒で終わるようになりました。素晴らしい！\r\n\r\n<details open>\r\n  <summary>Angular v7以前（2019-11-14 作成）<\/summary>\r\n\r\n## Angular v7以前の設定方法について\r\n\r\nAngular 7でangular-cli-ghpagesライブラリを利用して、github pagesを簡単に更新できるようなので、その設定方法などを調べました。\r\n\r\n### 実施した手順\r\n\r\nまず初めに[angular-cli-ghpagesのgithubリポジトリ](https:\/\/github.com\/angular-schule\/angular-cli-ghpages)を確認しました。\r\n\r\nPrerequisitesに`Angular project created via Angular CLI v8.3.0-next.0 or greate`と書かれているのを発見。うまくいかないかもしれないが、とりあえずAngular CLI v7系のまま設定を実施しました。\r\n\r\n``` powershell\r\nPS C:\\Repos\\github\\tech-log\\Website\\ClientApp> ng add angular-cli-ghpages\r\nInstalling packages for tooling via npm.\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.7 (node_modules\\fsevents):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.7: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\n+ angular-cli-ghpages@0.5.3\r\nadded 18 packages from 17 contributors and audited 42977 packages in 21.148s\r\nfound 607 vulnerabilities (3 moderate, 604 high)\r\n  run `npm audit fix` to fix them, or `npm audit` for details\r\nInstalled packages for tooling via npm.\r\nThe package that you are trying to add does not support schematics. You can try using a different version of the package or contact the package author to add ng-add support.\r\n```\r\n\r\n警告などが出ている（auditは今後の課題）が、今回は無視して進めます。\r\n\r\n``` powershell\r\nPS C:\\Repos\\github\\tech-log\\Website\\ClientApp> ng build --prod --base-href \"https:\/\/takumura.github.io\/tech-log\/\"\r\n```\r\n\r\ndry-runによる予行でどのように動くか実験。\r\n\r\n``` powershell\r\nPS C:\\Repos\\github\\tech-log\\Website\\ClientApp> npx angular-cli-ghpages --dry-run\r\n*** Dry-run: No changes are applied at all.\r\n*** Dry-run \/ SKIPPED: cleaning of the cache directory\r\n*** Dry-run \/ SKIPPED: copying of index.html to 404.html\r\n*** Dry-run \/ SKIPPED: publishing to \"C:\\Repos\\github\\tech-log\\Website\\ClientApp\\dist\" with the following options: { dir: 'C:\\\\Repos\\\\github\\\\tech-log\\\\Website\\\\ClientApp\\\\dist',\r\n  repo:\r\n   'undefined: current working directory (which must be a git repo in this case) will be used to commit & push',\r\n  message: 'Auto-generated commit',\r\n  branch: 'gh-pages',\r\n  user:\r\n   'undefined: local or gloabl git username & email properties will be taken',\r\n  noSilent: 'undefined: logging is in silent mode by default',\r\n  noDotfiles: 'undefined: dotfiles are included by default',\r\n  dryRun: true,\r\n  cname: 'undefined: no CNAME file will be created' }\r\n*** Successfully published!\r\n```\r\n\r\n問題なさそうなので本実行。\r\n\r\n``` powershell\r\nPS C:\\Repos\\github\\tech-log\\Website\\ClientApp> npx angular-cli-ghpages\r\n```\r\n\r\n初回は`Permission denied (publickey)`エラーが発生してpushに失敗。[Git: githubへのssh接続をSourceTreeからwindows 10標準のssh clientに切り替える](doc\/env\/git-ssh-configuration)<!--rehype:class=internal-link-->の対応を実施してから再チャレンジ。\r\n\r\n``` powershell\r\nPS C:\\Repos\\github\\tech-log\\Website\\ClientApp> npx angular-cli-ghpages\r\n*** Successfully published!\r\n```\r\n\r\n無事成功。<https:\/\/takumura.github.io\/tech-log\/> にアクセスすると、見事にサイトが表示されていました。fetchでのjsonデータ取得や、ページ遷移なども問題なく動作しています。素晴らしい！\r\n\r\n### publish scriptの作成\r\n\r\nprodオプション付きのビルドを実行し、生成されたdistフォルダ以下をorigin\/gh-pagesにpushするスクリプトを作成しました。\r\n\r\n**publish-to-ghpages.ps1**\r\n\r\n``` powershell\r\nng build --prod --base-href \"https:\/\/takumura.github.io\/tech-log\/\"\r\nnpx angular-cli-ghpages\r\n```\r\n\r\n<\/details>\r\n\r\n## 作業時に参照した情報\r\n\r\n- [Deploying an Angular App to Github Pages](https:\/\/alligator.io\/angular\/deploying-angular-app-github-pages\/)\r\n- [Angular-CLIで作成したアプリをGithub Pagesにデプロイする](https:\/\/prokatsu.com\/angular-cli_github-pages_deploy\/)\r\n- [AngularのプロジェクトをGithub Pagesに公開する](https:\/\/choco14t.hatenablog.com\/entry\/2018\/07\/07\/144504)\r\n- [Unknown option: '--base-href' Angular 13 ng serve | stackoverflow](https:\/\/stackoverflow.com\/questions\/71604562\/unknown-option-base-href-angular-13-ng-serve)\r\n"}