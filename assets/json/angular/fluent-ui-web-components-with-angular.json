{"title":".NET6とAngular v13でSPAサイトを作る（フロントエンド）","date":"2022-01-07","category":"csharp","tag":["fluent ui","angular"],"body":"これまでずっとデザインシステムに[Angular Material](https://material.angular.io/)を使ってきたのですが、今回は新しいものということで、最近MS OfficeやTeamsで見かける[Fluent UIのAngularでも使えるWeb Component](https://docs.microsoft.com/en-us/fluent-ui/web-components/integrations/angular)の導入を検討しました。\r\n\r\n結論としては、まだまだ未成熟で私の力では実践投入できなそうだったので導入を断念しました。開発の進捗状況を見つつ、仕上がってきたら導入を再検討したいです。\r\n\r\n### 検討時に行った作業\r\n\r\n元々UI Fabricと呼ばれていたころはReact向けライブラリがメインだった感があり、今も一番充実しているのはFluent UI Reactのようです。[公式Github](https://github.com/microsoft/fluentui)によると、Office系で使われている`Fluent UI React`、Teamsで使われている`Fluent UI React Northstar`、Edgeで使われている`Fluent UI Web Component`の3種類があるようです。このうちAngularで利用できるのは`Fluent UI Web Component`です。\r\n\r\n|   | React | React Northstar | Web Components |\r\n|---| ----- | --------------- | -------------- |\r\n| **Overview**    | Mature, refreshing with new concepts from react-northstar. | Newer, has concepts we're iterating on. | Web Component implementation of Fluent UI. |\r\n| **Used By**     | Office| Teams | Edge |\r\n\r\n説明に従い、3つのモジュール(`@fluentui/web-components`、`@microsoft/fast-element`、`lodash-es`)をインストールします。\r\n\r\n``` ps\r\n> yarn add @fluentui/web-components @microsoft/fast-element lodash-es\r\nyarn add v1.22.15\r\n[1/4] Resolving packages...\r\n[2/4] Fetching packages...\r\n...\r\n[3/4] Linking dependencies...\r\n[4/4] Building fresh packages...\r\nsuccess Saved lockfile.\r\nsuccess Saved 8 new dependencies.\r\ninfo Direct dependencies\r\n├─ @fluentui/web-components@2.2.0\r\n├─ @microsoft/fast-element@1.6.2\r\n└─ lodash-es@4.17.21\r\ninfo All dependencies\r\n├─ @fluentui/web-components@2.2.0\r\n├─ @microsoft/fast-colors@5.1.4\r\n├─ @microsoft/fast-element@1.6.2\r\n├─ @microsoft/fast-foundation@2.29.0\r\n├─ @microsoft/fast-web-utilities@5.0.2\r\n├─ exenv-es6@1.0.0\r\n├─ lodash-es@4.17.21\r\n└─ tabbable@5.2.1\r\nDone in 40.64s.\r\n```\r\n\r\nその後も説明に従いmain.tsに以下の一行を追加したところ、build errorが発生するようになってしまいました。\r\n`provideFluentDesignSystem().register(fluentDesignSystemProvider());`\r\n\r\n[FAST designのissue](https://github.com/microsoft/fast/issues/5198)によると、typescriptのversionが4.3.5以上だとこのエラーが発生するとのこと。暫定の回避手段は`skipLibCheck: true`を`tsconfig.json`に追加することでした。\r\n\r\n``` diff\r\n/* To learn more about this file see: https://angular.io/config/tsconfig. */\r\n{\r\n  \"compileOnSave\": false,\r\n  \"compilerOptions\": {\r\n    \"baseUrl\": \"./\",\r\n    \"outDir\": \"./dist/out-tsc\",\r\n    \"forceConsistentCasingInFileNames\": true,\r\n    \"strict\": true,\r\n    \"noImplicitOverride\": true,\r\n    \"noPropertyAccessFromIndexSignature\": true,\r\n    \"noImplicitReturns\": true,\r\n    \"noFallthroughCasesInSwitch\": true,\r\n    \"sourceMap\": true,\r\n    \"declaration\": false,\r\n    \"downlevelIteration\": true,\r\n    \"experimentalDecorators\": true,\r\n    \"moduleResolution\": \"node\",\r\n    \"importHelpers\": true,\r\n    \"target\": \"es2017\",\r\n    \"module\": \"es2020\",\r\n    \"lib\": [\"es2020\", \"dom\"],\r\n+    \"skipLibCheck\": true\r\n  },\r\n  \"angularCompilerOptions\": {\r\n    \"enableI18nLegacyMessageIdFormat\": false,\r\n    \"strictInjectionParameters\": true,\r\n    \"strictInputAccessModifiers\": true,\r\n    \"strictTemplates\": true\r\n  }\r\n}\r\n```\r\n\r\nこれでdebugが実行できるようになり、Fluent UIのスタイルが適用されるようになります。ただし背景色やテキスト色は自身で設定する必要があるようです。\r\n\r\n``` css\r\nbody {\r\n  background: var(--fill-color);\r\n  color: var(--neutral-foreground-rest);\r\n}\r\n```\r\n\r\n## 関連項目\r\n\r\n- [Use Fluent UI Web Components with Angular](https://docs.microsoft.com/en-us/fluent-ui/web-components/integrations/angular)\r\n- [FAST color explorer](https://color.fast.design/)\r\n- [Using FAST to Rebrand an Existing Website](https://github.com/microsoft/fast/tree/master/examples/site-rebrand-tutorial)"}