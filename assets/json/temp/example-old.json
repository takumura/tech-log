{"title":"Old Markdown Example","date":"2019-04-13","category":"Markdown","tag":["template","test"],"body":"## How to use Markdown for writing Docs\r\n\r\nPicked up sample markdown syntax document from [How to use Markdown for writing Docs - Microsoft Docs](https://docs.microsoft.com/en-us/contribute/how-to-write-use-markdown#ops-custom-markdown-extensions)\r\n\r\n## Markdown basics\r\n\r\n### Headings\r\n\r\nTo create a heading, you use a hash mark (#), as follows:\r\n\r\n```markdown\r\n# This is heading 1\r\n\r\n## This is heading 2\r\n\r\n### This is heading 3\r\n\r\n#### This is heading 4\r\n```\r\n\r\nHeadings should be done using atx-style, that is, use 1-6 hash characters (#) at the start of the line to indicate a heading, corresponding to HTML headings levels H1 through H6. Examples of first- through fourth-level headers are used above.\r\n\r\nThere **must** be only one first-level heading (H1) in your topic, which will be displayed as the on-page title.\r\n\r\nIf your heading finishes with a `#` character, you need to add an extra `#` character in the end in order for the title to render correctly. For example, `# Async Programming in F# #`.\r\n\r\nSecond-level headings will generate the on-page TOC that appears in the \"In this article\" section underneath the on-page title.\r\n\r\n### Bold and italic text\r\n\r\nTo format text as **bold**, you enclose it in two asterisks:\r\n\r\n```markdown\r\nThis text is **bold**.\r\n```\r\n\r\nTo format text as _italic_, you enclose it in a single asterisk:\r\n\r\n```markdown\r\nThis text is _italic_.\r\n```\r\n\r\nTo format text as both **_bold and italic_**, you enclose it in three asterisks:\r\n\r\n```markdown\r\nThis is text is both **_bold and italic_**.\r\n```\r\n\r\n### Blockquotes\r\n\r\nBlockquotes are created using the `>` character:\r\n\r\n```markdown\r\n> The drought had lasted now for ten million years, and the reign of the terrible lizards had long since ended. Here on the Equator, in the continent which would one day be known as Africa, the battle for existence had reached a new climax of ferocity, and the victor was not yet in sight. In this barren and desiccated land, only the small or the swift or the fierce could flourish, or even hope to survive.\r\n```\r\n\r\nThe preceding example renders as follows:\r\n\r\n> The drought had lasted now for ten million years, and the reign of the terrible lizards had long since ended. Here on the Equator, in the continent which would one day be known as Africa, the battle for existence had reached a new climax of ferocity, and the victor was not yet in sight. In this barren and desiccated land, only the small or the swift or the fierce could flourish, or even hope to survive.\r\n\r\n### Lists\r\n\r\n#### Unordered list\r\n\r\nTo format an unordered/bulleted list, you can use either asterisks or dashes. For example, the following Markdown:\r\n\r\n```markdown\r\n- List item 1\r\n- List item 2\r\n- List item 3\r\n```\r\n\r\nwill be rendered as:\r\n\r\n- List item 1\r\n- List item 2\r\n- List item 3\r\n\r\nTo nest a list within another list, indent the child list items. For example, the following Markdown:\r\n\r\n```markdown\r\n- List item 1\r\n  - List item A\r\n  - List item B\r\n- List item 2\r\n```\r\n\r\nwill be rendered as:\r\n\r\n- List item 1\r\n  - List item A\r\n  - List item B\r\n- List item 2\r\n\r\n#### Ordered list\r\n\r\nTo format an ordered/stepwise list, you use corresponding numbers. For example, the following Markdown:\r\n\r\n```markdown\r\n1. First instruction\r\n1. Second instruction\r\n1. Third instruction\r\n```\r\n\r\nwill be rendered as:\r\n\r\n1.  First instruction\r\n2.  Second instruction\r\n3.  Third instruction\r\n\r\nTo nest a list within another list, indent the child list items. For example, the following Markdown:\r\n\r\n```markdown\r\n1. First instruction\r\n   1. Sub-instruction\r\n   1. Sub-instruction\r\n1. Second instruction\r\n```\r\n\r\nwill be rendered as:\r\n\r\n1.  First instruction\r\n    1.  Sub-instruction\r\n    2.  Sub-instruction\r\n2.  Second instruction\r\n\r\nNote that we use '1.' for all entries. It makes diffs easier to review when later updates include new steps or remove existing steps.\r\n\r\n### Tables\r\n\r\nTables are not part of the core Markdown specification, but GFM supports them. You can create tables by using the pipe (|) and hyphen (-) characters. Hyphens create each column's header, while pipes separate each column. Include a blank line before your table so it's rendered correctly.\r\n\r\nFor example, the following Markdown:\r\n\r\n```markdown\r\n| Fun                 |                 With |     Tables      |\r\n| :------------------ | -------------------: | :-------------: |\r\n| left-aligned column | right-aligned column | centered column |\r\n| \\$100               |                \\$100 |      \\$100      |\r\n| \\$10                |                 \\$10 |      \\$10       |\r\n| \\$1                 |                  \\$1 |       \\$1       |\r\n```\r\n\r\nwill be rendered as:\r\n\r\n| Fun                 |                 With |     Tables      |\r\n| :------------------ | -------------------: | :-------------: |\r\n| left-aligned column | right-aligned column | centered column |\r\n| \\$100               |                \\$100 |      \\$100      |\r\n| \\$10                |                 \\$10 |      \\$10       |\r\n| \\$1                 |                  \\$1 |       \\$1       |\r\n\r\nFor more information on creating tables, see:\r\n\r\n- GitHub's [Organizing information with tables](https://help.github.com/articles/organizing-information-with-tables/).\r\n- The [Markdown Tables Generator](https://www.tablesgenerator.com/markdown_tables) web app.\r\n- [Adam Pritchard's Markdown Cheatsheet](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#wiki-tables).\r\n- [Michel Fortin's Markdown Extra](https://michelf.ca/projects/php-markdown/extra/#table).\r\n- [Convert HTML tables to Markdown](https://jmalarcon.github.io/markdowntables/).\r\n\r\n### Links\r\n\r\nThe Markdown syntax for an inline link consists of the `[link text]` portion, which is the text that will be hyperlinked, followed by the `(file-name.md)` portion, which is the URL or file name that's being linked to:\r\n\r\n`[link text](file-name.md)`\r\n\r\nFor more information on linking, see:\r\n\r\n- The [Markdown syntax guide](https://daringfireball.net/projects/markdown/syntax#link) for details on Markdown's base linking support.\r\n- The [Links](how-to-write-links.md) section of this guide for details on the additional linking syntax that Markdig provides.\r\n\r\n### Internal Links\r\n\r\nFor anguler's limitation, we need to introduce another syntax to show internal link(link within the site).\r\n\r\n`[link text](link_path){.internal-link}`\r\n\r\n`.internal-link` is the css class to show internal link as a different style compare to external links.\r\n\r\nFollowing link: [Move to Example](docs/temp/example){.internal-link} will move to initial home screen of this site\r\n\r\nanother example for own link [Move to Old Example(own screen)](docs/temp/example-old){.internal-link}\r\n\r\n### Code snippets\r\n\r\nMarkdown supports the placement of code snippets both inline in a sentence and as a separate \"fenced\" block between sentences. For details, see:\r\n\r\n- [Markdown's native support for code blocks](https://daringfireball.net/projects/markdown/syntax#precode)\r\n- [GFM support for code fencing and syntax highlighting](https://help.github.com/articles/creating-and-highlighting-code-blocks/)\r\n\r\nFenced code blocks are an easy way to enable syntax highlighting for your code snippets. The general format for fenced code blocks is:\r\n\r\n    ```alias\r\n    ...\r\n    your code goes in here\r\n    ...\r\n    ```\r\n\r\nThe alias after the initial three backtick (\\`) characters defines the syntax highlighting to be used. The following is a list of commonly used programming languages in Docs content and the matching label:\r\n\r\nThese languages have friendly name support and most have language highlighting.\r\n\r\n| Name                                | Markdown Label     |\r\n| ----------------------------------- | ------------------ |\r\n| .NET Console                        | dotnetcli          |\r\n| ASP.NET (C#)                        | aspx-csharp        |\r\n| ASP.NET (VB)                        | aspx-vb            |\r\n| AzCopy                              | azcopy             |\r\n| Azure CLI                           | azurecli           |\r\n| Azure PowerShell                    | azurepowershell    |\r\n| Bash                                | bash               |\r\n| C++                                 | cpp                |\r\n| C++/CX                              | cppcx              |\r\n| C++/WinRT                           | cppwinrt           |\r\n| C#                                  | csharp             |\r\n| C# in browser                       | csharp-interactive |\r\n| Console                             | console            |\r\n| CSHTML                              | cshtml             |\r\n| DAX                                 | dax                |\r\n| Docker                              | dockerfile         |\r\n| F#                                  | fsharp             |\r\n| Go                                  | go                 |\r\n| HTML                                | html               |\r\n| HTTP                                | http               |\r\n| Java                                | java               |\r\n| JavaScript                          | javascript         |\r\n| JSON                                | json               |\r\n| Kusto Query Language                | kusto              |\r\n| Markdown                            | md                 |\r\n| Objective-C                         | objc               |\r\n| OData                               | odata              |\r\n| PHP                                 | php                |\r\n| PowerApps (dot decimal separator)   | powerapps-dot      |\r\n| PowerApps (comma decimal separator) | powerapps-comma    |\r\n| PowerShell                          | powershell         |\r\n| Python                              | python             |\r\n| Q#                                  | qsharp             |\r\n| R                                   | r                  |\r\n| Ruby                                | ruby               |\r\n| SQL                                 | sql                |\r\n| Swift                               | swift              |\r\n| TypeScript                          | typescript         |\r\n| VB                                  | vb                 |\r\n| XAML                                | xaml               |\r\n| XML                                 | xml                |\r\n\r\nThe `csharp-interactive` name specifies the C# language, and the ability to run the samples from the browser. These snippets are compiled and executed in a Docker container, and the results of that program execution are displayed in the user's browser window.\r\n\r\n#### Example: C\\\\\r\n\r\n**Markdown**\r\n\r\n    ```csharp\r\n    // Hello1.cs\r\n    public class Hello1\r\n    {\r\n        public static void Main()\r\n        {\r\n            System.Console.WriteLine(\"Hello, World!\");\r\n        }\r\n    }\r\n    ```\r\n\r\n**Render**\r\n\r\n```csharp\r\n// Hello1.cs\r\npublic class Hello1\r\n{\r\n    public static void Main()\r\n    {\r\n        System.Console.WriteLine(\"Hello, World!\");\r\n    }\r\n}\r\n```\r\n\r\n#### Example: SQL\r\n\r\n**Markdown**\r\n\r\n    ```sql\r\n    CREATE TABLE T1 (\r\n      c1 int PRIMARY KEY,\r\n      c2 varchar(50) SPARSE NULL\r\n    );\r\n    ```\r\n\r\n**Render**\r\n\r\n```sql\r\nCREATE TABLE T1 (\r\n  c1 int PRIMARY KEY,\r\n  c2 varchar(50) SPARSE NULL\r\n);\r\n```\r\n\r\n### Alt text\r\n\r\nAlt text that contains underscores won't be rendered properly. For example, instead of using this:\r\n\r\n```markdown\r\n![ADextension_2FA_Configure_Step4](./media/bogusfilename/ADextension_2FA_Configure_Step4.PNG)\r\n```\r\n\r\nEscape the underscores like this:\r\n\r\n```markdown\r\n![ADextension_2FA_Configure_Step4](./media/bogusfilename/ADextension_2FA_Configure_Step4.PNG)\r\n```\r\n\r\n### Apostrophes and quotation marks\r\n\r\nIf you copy from Word into a Markdown editor, the text might contain \"smart\" (curly) apostrophes or quotation marks. These need to be encoded or changed to basic apostrophes or quotation marks. Otherwise, you end up with things like this when the file is published: Itâ€™s\r\n\r\nHere are the encodings for the \"smart\" versions of these punctuation marks:\r\n\r\n- Left (opening) quotation mark: `&#8220;`\r\n- Right (closing) quotation mark: `&#8221;`\r\n- Right (closing) single quotation mark or apostrophe: `&#8217;`\r\n- Left (opening) single quotation mark (rarely used): `&#8216;`\r\n\r\n### Angle brackets\r\n\r\nIt is common to use angle brackets to denote a placeholder. When you do this in text (not code), you must encode the angle brackets. Otherwise, Markdown thinks that they're intended to be an HTML tag.\r\n\r\nFor example, encode `<script name>` as `&lt;script name&gt;`\r\n\r\n## Markdown flavor\r\n\r\nThe docs.microsoft.com site backend uses Open Publishing Services (OPS) which supports [CommonMark](https://commonmark.org/) compliant markdown parsed through the [Markdig](https://github.com/lunet-io/markdig) parsing engine. This markdown flavor is mostly compatible with [GitHub Flavored Markdown (GFM)](https://help.github.com/categories/writing-on-github/), as most docs are stored in GitHub and can be edited there. Additional functionality is added through Markdown extensions.\r\n\r\n## See also:\r\n\r\n### Markdown resources\r\n\r\n- [Introduction to Markdown](https://daringfireball.net/projects/markdown/syntax)\r\n- [Docs Markdown cheat sheet](./media/documents/markdown-cheatsheet.pdf?raw=true)\r\n- [GitHub's Markdown Basics](https://help.github.com/articles/markdown-basics/)\r\n- [The Markdown Guide](https://www.markdownguide.org/)"}