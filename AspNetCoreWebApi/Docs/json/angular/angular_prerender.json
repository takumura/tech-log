{"title":"Angularのプリレンダリングについて","date":"2020-02-15","category":"Angular","tag":["prerender"],"body":"[angular-prerender](https:\/\/github.com\/chrisguttandin\/angular-prerender)という気になるツールを見かけたので、使ったらどうなるのか試してみます。\r\n\r\n## 環境の準備\r\n\r\n### nodejs\r\n\r\nLTS版のnodeを利用します。これまではWindows installerでインストールしていましたが、今回kらscoopを使うようにしました。\r\n\r\n``` powershell\r\n> scoop install nodejs-lts\r\nInstalling 'nodejs-lts' (12.16.0) [64bit]\r\nnode-v12.16.0-win-x64.7z (10.2 MB) [=============================] 100%\r\nChecking hash of node-v12.16.0-win-x64.7z ... ok.\r\nExtracting node-v12.16.0-win-x64.7z ... done.\r\nLinking C:\\Apps\\scoop\\apps\\nodejs-lts\\current => C:\\Apps\\scoop\\apps\\nodejs-lts\\12.16.0\r\nPersisting bin\r\nPersisting cache\r\nRunning post-install script...\r\n'nodejs-lts' (12.16.0) was installed successfully!\r\n\r\n> node -v\r\nv12.16.0\r\n```\r\n\r\nwindowsのアンインストールでは`%AppData%\/npm`と`%AppData%\/npm-cache`が削除されず残ってしまうことがありました。見つけたら手動で削除します。\r\n\r\n### package manager\r\n\r\n2020年2月の調査でもnpmよりyarnの方がパフォーマンスが良いという記事が多いので、package managerにはnpmではなくyarnを使用します。scoopを使ってインストールします。\r\n\r\n``` powershell\r\n> scoop install yarn\r\n```\r\n\r\n### Angular CLI\r\n\r\nAngularのバージョンは9を利用することにします。これまではAngular7を使っていて、今回初めて9のプロジェクトを作るので、Angular CLIの更新から始めます。\r\n\r\nyarn globalインストールでは、versionがうまく表示されないエラーがあるようなので、npmでグローバルインストールします。\r\n\r\n``` powershell\r\n> npm uninstall -g angular-cli\r\n> npm cache verify\r\n> npm install -g @angular\/cli@latest\r\n> ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    \/ \\   _ __   __ _ _   _| | __ _ _ __     \/ ___| |   |_ _|\r\n   \/ △ \\ | '_ \\ \/ _` | | | | |\/ _` | '__|   | |   | |    | |\r\n  \/ ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n \/_\/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___\/\r\n\r\nAngular CLI: 9.0.2\r\nNode: 12.16.0\r\nOS: win32 x64\r\n\r\nAngular:\r\n...\r\nIvy Workspace:\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit\/architect    0.900.2\r\n@angular-devkit\/core         9.0.2\r\n@angular-devkit\/schematics   9.0.2\r\n@schematics\/angular          9.0.2\r\n@schematics\/update           0.900.2\r\nrxjs                         6.5.3\r\n```\r\n\r\n## プロジェクトの作成\r\n\r\nangular prerender公式サイトの手順通りに進めます。\r\n\r\n``` powershell\r\n> ng config -g cli.packageManager yarn\r\n> ng new universe --routing\r\n```\r\n\r\n初回実行時にpackageの解決まで行われるので、事前にAngular CLIが利用するpackage managerをyarnに変更してから、新規にAngular9 appを作成しました。\r\n\r\n## universal(server) moduleの作成\r\n\r\n``` powershell\r\n> cd universe\r\n> ng generate universal --client-project universe\r\nCREATE src\/main.server.ts (298 bytes)\r\nCREATE src\/app\/app.server.module.ts (318 bytes)\r\nCREATE tsconfig.server.json (308 bytes)\r\nUPDATE package.json (1327 bytes)\r\nUPDATE angular.json (4357 bytes)\r\nUPDATE src\/main.ts (432 bytes)\r\nUPDATE src\/app\/app.module.ts (438 bytes)\r\n√ Packages installed successfully.\r\n```\r\n\r\n## angular-prerenderの導入とprerender処理\r\n\r\n``` powershell\r\n> yarn add angular-prerender --dev\r\n> ng build\r\n> ng run universe:server\r\n> npx angular-prerender\r\n```\r\n\r\n処理が正常に終了し、`dist\\universe\\browser\\index.html`にapp.component.htmlの内容が追記されていることを確認しました。\r\n\r\n## 次にやること\r\n\r\nrouteを増やして、どのようにhtmlが追記されるのかを確認します。\r\n\r\n## 作業録\r\n\r\nステップ毎の変更点を<https:\/\/github.com\/takumura\/angular-express-prerender\/commits\/master>から確認できます。\r\n\r\n## 関連項目\r\n\r\n- [Angular Update Guide](https:\/\/update.angular.io\/)\r\n- [Updating to Angular version 9](https:\/\/angular.io\/guide\/updating-to-version-9)\r\n- [Angularの環境構築（Angular CLIで構築）](https:\/\/qiita.com\/Yamamoto0525\/items\/65d5a0b36eb4dbd8079b)"}