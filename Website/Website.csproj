<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <RuntimeFrameworkVersion>2.1.17</RuntimeFrameworkVersion>
    <!-- <TargetLatestRuntimePatch>true</TargetLatestRuntimePatch> -->
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>3.1</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <MdPath>ClientApp\docs</MdPath>
    <JsonPath>ClientApp\src\assets\json</JsonPath>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <LangVersion>7.1</LangVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.1.1" />
    <PackageReference Include="Nerdbank.GitVersioning" Version="3.4.194">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>

    <ProjectReference Include="..\MarkdownConverter\MarkdownConverter.csproj" />

    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />

    <Content Remove="Controllers\**" />
    <Content Remove="wwwroot\**" />
    <EmbeddedResource Remove="Controllers\**" />
    <EmbeddedResource Remove="wwwroot\**" />
    <None Remove="Controllers\**" />
    <None Remove="wwwroot\**" />

    <Content Include="ClientApp\src\favicon.ico" />
    <Folder Include="ClientApp\src\assets\json\" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="RemoveDist" BeforeTargets="Build">
    <Message Importance="high" Text="Delete prvious modules on dist folder" />
    <RemoveDir Directories="$(SpaRoot)dist" Condition=" Exists('$(SpaRoot)dist') " />
  </Target>

  <Target Name="ConvertMarkdownToJson" AfterTargets="Build">
    <Message Importance="high" Text="Convert markdown file. input:$(MdPath) output:$(JsonPath)" />
    <Message Importance="high" Text="Check converter path: ..\MarkdownConverter\bin\$(configuration)\$(TargetFramework)\" />
    <Exec WorkingDirectory="$(ProjectDir)" Command="dotnet ..\MarkdownConverter\bin\$(configuration)\$(TargetFramework)\MarkdownConverter.dll -i $(MdPath) -o $(JsonPath)" />
  </Target>

  <Target Name="AotBuild" AfterTargets="ConvertMarkdownToJson" Condition=" '$(Configuration)' == 'Release'">
    <Message Importance="high" Text="Run AotBuild: check configuration: $(Configuration)" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run prod-build" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <ProjectExtensions>
    <VisualStudio>
      <UserProperties ClientApp_4package_1json__JSONSchema="" />
    </VisualStudio>
  </ProjectExtensions>

  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <TypeScriptTarget>ES5</TypeScriptTarget>
    <TypeScriptJSXEmit>None</TypeScriptJSXEmit>
    <TypeScriptModuleKind />
    <TypeScriptCompileOnSaveEnabled>True</TypeScriptCompileOnSaveEnabled>
    <TypeScriptNoImplicitAny>False</TypeScriptNoImplicitAny>
    <TypeScriptRemoveComments>False</TypeScriptRemoveComments>
    <TypeScriptOutFile />
    <TypeScriptOutDir />
    <TypeScriptGeneratesDeclarations>False</TypeScriptGeneratesDeclarations>
    <TypeScriptNoEmitOnError>True</TypeScriptNoEmitOnError>
    <TypeScriptSourceMap>True</TypeScriptSourceMap>
    <TypeScriptMapRoot />
    <TypeScriptSourceRoot />
  </PropertyGroup>

</Project>
